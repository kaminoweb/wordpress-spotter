#!/bin/bash
#+------------------------------------------------------------------------+
#+ Name           :   check-wp-pingback.bsh                               +
#+ Description    :   Scans for WordPress X-Pingback header in the        +
#+                :   HTTP response.                                      +
#+ Author         :   KAMINOWEB INC                                       +
#+ www            :   https://kaminoweb.com/                              +
#+                                                                        +
#+ Creation       :   20/10/24                                            +
#+ Revision       :   06/07/25                                            +
#+------------------------------------------------------------------------+

#set -x # Uncomment for debugging

# --- Functions ---

usage() {
    echo "Usage: $0 <URL>"
    echo "Example: $0 https://kaminoweb.com"
    exit 1
}

probe_url() {
    local URL_TO_CHECK=$1
    local STATUS_CODE
    STATUS_CODE=$(curl -o /dev/null -s -L --max-time 10 -w "%{http_code}" "${URL_TO_CHECK}")
    # Ensure STATUS_CODE is a number
    if ! [[ "${STATUS_CODE}" =~ ^[0-9]+$ ]]; then
        STATUS_CODE=0
    fi
    echo "${STATUS_CODE}"
}

check_url_format() {
    local URL=$1
    if [[ ! "${URL}" =~ ^https?:// ]]; then
        echo "Error: URL must start with 'http://' or 'https://'." >&2
        exit 1
    fi
}

conclusion() {
    echo ""
    if [ "${IS_WORDPRESS}" = true ]; then
        echo "Conclusion: The website at ${TARGET_URL} is likely a WordPress site (X-Pingback header detected)."
    else
        echo "Conclusion: The website at ${TARGET_URL} does not appear to be a WordPress site (X-Pingback header not detected)."
    fi
}

# --- Main Logic ---

main() {
    if [ "$#" -ne 1 ]; then
        usage
    fi

    TARGET_URL="$1"
    check_url_format "${TARGET_URL}"

    IS_WORDPRESS=false # Default assumption
    local PINGBACK_HEADER=""

    echo "Attempting to fetch headers from: ${TARGET_URL}"
    echo "Please wait..."

    # Fetch only headers (-I) and follow redirects (-L)
    PINGBACK_HEADER=$(curl -s -L -I --max-time 10 "${TARGET_URL}" 2>/dev/null | grep -i "X-Pingback:")

    if [ -n "${PINGBACK_HEADER}" ]; then
        echo "Success: 'X-Pingback' header detected."
        echo "Header details: ${PINGBACK_HEADER}"
        echo "This header is commonly present on WordPress sites, indicating the Pingback feature is active."
        IS_WORDPRESS=true
    else
        echo "Info: 'X-Pingback' header not detected in the response."
        echo "This header might be removed for security reasons, or the site is not WordPress."
    fi

    conclusion
}

# --- Execute Script ---
# Pass all command-line arguments to the main function
main "$@"
